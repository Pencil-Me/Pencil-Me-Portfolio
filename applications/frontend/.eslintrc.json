{
  "root": true,
  "ignorePatterns": ["projects/**/*", "dist", "node_modules"],
  "overrides": [
    {
      // === TypeScript Files ===
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "tsconfigRootDir": "./applications/frontend",
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking", // optional: striktere Regeln
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@ngrx/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        // === ANGULAR NAMING ===
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],

        // === TYPESCRIPT GOOD PRACTICES ===
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/consistent-type-imports": "warn",

        // === NgRx ===
        "@ngrx/no-multiple-global-stores": "error",

        // === CODE STYLE ===
        "no-console": ["warn", { "allow": ["warn", "error"] }],
        "no-debugger": "error"
      }
    },
    {
      // === HTML TEMPLATE FILES ===
      "files": ["*.html"],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility"
      ],
      "rules": {
        "@angular-eslint/template/no-negated-async": "error"
      }
    },
    {
      // === PRETTIER f√ºr HTML ===
      "files": ["*.html"],
      "excludedFiles": ["*inline-template-*.component.html"],
      "extends": ["plugin:prettier/recommended"],
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "parser": "angular"
          }
        ]
      }
    },
    {
      // === SPEC FILES ===
      "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-empty-function": "off"
      }
    }
  ]
}
